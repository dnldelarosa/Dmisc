% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/real_prices_indexer.R
\name{real_prices_indexer}
\alias{real_prices_indexer}
\title{Monetary quantities adjusted for inflation
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}`}
\usage{
real_prices_indexer(
  tbl,
  name,
  prices,
  variable,
  base_prices,
  .join = c("year", "month"),
  .keep = FALSE
)
}
\arguments{
\item{tbl}{\link{data.frame}: Database connection or data.frame}

\item{name}{\link{character}: variable name}

\item{prices}{\link{data.frame}: Database connection or data.frame with the prices}

\item{variable}{\link{character}: prices variable name}

\item{base_prices}{\link{numeric}: indicates the base prices. See \code{Details}.}

\item{.join}{\link{character}: name of the variable that joins the two data.frames}

\item{.keep}{\link{logical}: indicates if the prices variables should be kept}
}
\value{
tbl a new data.frame with the variable in base prices
}
\description{
Monetary quantities adjusted for inflation
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}`
}
\details{
The base_prices parameter can be a negative or positive integer.
If it is a negative integer, the prices are adjusted backward by \code{base_prices} months.
If it is a positive integer, the prices are adjusted forward by \code{base_prices} months.
However, if the base_prices is 0, the prices are not adjusted.
The base_prices parameter can be a two-element vector too. In this case, if the
first element is a negative or positive integer lower than 1900, it will be
interpreted as the number of years to move back or forward. If the first element
is a positive integer greater than 1900, it will be interpreted as the year
to use as the base. The sencond element needs to be a positive integer between 1 and 12,
and is the month to use as the base.
}
\examples{
\dontrun{
tbl <- data.frame(
  year = c(rep(2009, 12), rep(2010, 12), rep(2011, 12)),
  month = rep(1:12, 3),
  income = sample(100:500, 12 * 3, TRUE)
) \%>\%
dplyr::mutate(income2 = income)

cpi <- data.frame(
  year = c(rep(2008, 12), rep(2009, 12), rep(2010, 12), rep(2011, 12), rep(2012, 12)),
  month = rep(1:12, 5),
  cpi = 1:(12 * 5)
) \%>\%
  dplyr::mutate(
    cpi = cpi / cpi[year == 2010 & month == 12] * 100,
    cpi = round(cpi, 1)
  ) \%>\%
  vars_to_date(year = "year", month = "month")


# n months ago
real_prices_indexer(tbl, 'income2', cpi, 'cpi', -1, .keep = TRUE)

# n month later
real_prices_indexer(tbl, 'income2', cpi, 'cpi', 1, .keep = TRUE)

# same month, previous year (n = 12)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', -12, .keep = TRUE)

# same month, next year (n = 12)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', 12, .keep = TRUE)

# specific month, specific year (Jun 2009)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', c(2009, 6), .keep = TRUE)

# same year, specific month (June)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', c(0, 6), .keep = TRUE)

# n years ago, specific month (June previes year)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', c(-1, 6), .keep = TRUE)

# n years later, specific month (June next year)
real_prices_indexer(tbl, 'income2', cpi, 'cpi', c(1, 6), .keep = TRUE)
}
}
