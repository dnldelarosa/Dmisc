[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to Dmisc","title":"Contributing to Dmisc","text":"outlines propose change Dmisc. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to Dmisc","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to Dmisc","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to Dmisc","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"drdsdaniel/Dmisc\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to Dmisc","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to Dmisc","text":"Please note Dmisc project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Daniel E. de la Rosa Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/cut3.html","id":"cuts","dir":"Articles","previous_headings":"","what":"Cuts","title":"Cut Cut Cut","text":"important argument functions, data, breaks. argument consists indication intervals resulting categorical variable constructed.","code":""},{"path":"/articles/cut3.html","id":"a-single-number","dir":"Articles","previous_headings":"Cuts","what":"A Single Number","title":"Cut Cut Cut","text":"breaks argument consists single number (integer greater equal 2)3, interpreted number cuts made numerical variable converting categorical variable. case, except slight difference terms syntax, result achieved using cut3.","code":"df2 <- df df2$age <- cut(df2$age, breaks = 4) table(df2) #>    age #> sex (19.9,32.5] (32.5,45] (45,57.5] (57.5,70] #>   F          31       171       144       154 #>   M         155       159       150        36 df3 <- Dmisc::cut3(   df,    var_name = 'age',    breaks = 4 ) table(df3) #>    age #> sex (19.9,32.5] (32.5,45] (45,57.5] (57.5,70] #>   F          31       171       144       154 #>   M         155       159       150        36"},{"path":"/articles/cut3.html","id":"a-numeric-vector","dir":"Articles","previous_headings":"Cuts","what":"A Numeric Vector","title":"Cut Cut Cut","text":"breaks argument passed numeric vector, values contained vector interpreted cut points constructing intervals variable question divided. , can achieved using cut3() function. important note vector values must contain initial value less minimum variable final value greater equal maximum variable. due intervals constructed. Note label created variable (0,20] lower limit interval open (, means values greater 0 included. can change behavior make first range closed using include.lowest argument. upper limit closed ], meaning includes values less equal 20. vector values meet criteria described , values fit interval marked NA resulting variable. Additionally, case cut3() function, user sets .inf argument True, provided cut points extended -Inf Inf. means value included resulting variable, even outside range original values. ’s useful feature maximum minimum value variable known beforehand, want include values without set specific limits. Finally, essential values vector unique. fundamentally relevant cut points manually assigned, strategy used ends.","code":"df2 <- df df2$age <- cut(   df2$age,    breaks = c(0, 20, 40, 60, 80, 100) ) table(df2) #>    age #> sex (0,20] (20,40] (40,60] (60,80] (80,100] #>   F      0     137     245     118        0 #>   M      5     235     260       0        0 df3 <- df df3 <- cut3(   df3,    var_name = \"age\",    breaks = c(0, 20, 40, 60, 80, 100) ) table(df3) #>    age #> sex (0,20] (20,40] (40,60] (60,80] (80,100] #>   F      0     137     245     118        0 #>   M      5     235     260       0        0 cut3(   df,    var_name = \"age\",    breaks = c(0, 20, 40, 60, 80, 100) ) # Will leave NAs  cut3(   df,    var_name = \"age\",    breaks = c(20, 40, 60, 80),    include.lowest = T ) # Will leave NAs  cut3(   df,    var_name = \"age\",    breaks = c(20, 40, 60, 80),    .inf = F ) # Will not leave NAs"},{"path":"/articles/cut3.html","id":"functions","dir":"Articles","previous_headings":"Cuts","what":"Functions","title":"Cut Cut Cut","text":"One main innovations cut3() compared cut() breaks vector can function generates numeric vector cuts. common use case feature perhaps quantiles wanted divide variable. purposes, bf_args argument used, specifies additional arguments, passed function used construct break points. example code , cut3() function used divide “age” variable df data.frame groups bins based quantiles. , breaks set quantile, means quantiles “age” distribution used define break points. interesting feature approach allows greater flexibility defining groups. example, instead dividing variable equal-sized groups, can divide groups based distribution data. can particularly useful dealing variables skewed distribution highly concentrated certain ranges. Furthermore, allowing breaks function, cut3() offers possibility dynamically generating break points based data. can facilitate creation robust adaptable analysis, need define break points beforehand. Finally, mentioned bf_args argument allows pass additional arguments breaks function. offers even flexibility, can customize breaks function suit specific needs. example, change quantiles used divide variable, use completely different function generate break points.","code":"table(   cut3(     df,      var_name = \"age\",      breaks = quantile   ) ) #>    age #> sex (20,36] (36,45] (45,55] (55,70] #>   F      76     126     126     172 #>   M     195     114     128      58"},{"path":"/articles/cut3.html","id":"dmisccut3_quantiles","dir":"Articles","previous_headings":"Cuts > Functions","what":"Dmisc::cut3_quantiles","title":"Cut Cut Cut","text":"Dmisc package already includes cut3_quantile function, variant cut3 designed specifically divide variable quantiles. cut3_quantile takes data.frame, variable, set probabilities define quantiles. probabilities specified, default first quartile, median, third quartile used. calls cut3 R’s quantile function argument break points. example code , cut3_quantile divides “age” variable df data.frame quartiles. Therefore, want divide variable quantiles, can directly use cut3_quantile instead passing quantile argument breaks cut3.","code":"table(   cut3_quantile(     df,      var_name = \"age\"   ) ) #>    age #> sex (-Inf,36] (36,45] (45,55] (55, Inf] #>   F        76     126     126       172 #>   M       200     114     128        58"},{"path":"/articles/cut3.html","id":"groups","dir":"Articles","previous_headings":"","what":"Groups","title":"Cut Cut Cut","text":"Another addition cut3() ability define different cuts different groups. particularly useful break points specified using functions. previous code example, cut3() used divide “age” variable data.frame df groups, cuts defined separately value “sex” variable. means groups generated “age” different males females, can useful analyses require taking account differences groups. feature cut3() powerful allows adapting break points specific characteristics group. many cases, distribution variable can significantly vary among different groups, using break points groups might result inaccurate representation data. instance, imagine analyzing age participants study discover distribution ages quite different males females. use break points groups, might end bins contain many females males, vice versa. allowing define break points separately group, cut3() enables avoid problem ensure accurate representation data group. addition, function particularly useful break points specified using functions, functions can adapt specific characteristics group. example, use quantiles define break points, ensure bins contain approximately proportion observations group, regardless differences data distributions.","code":"table(   cut3(     df,      var_name = \"age\",      breaks = 4,      .inf = F   ) ) #>    age #> sex (19.9,32.5] (32.5,45] (45,57.5] (57.5,70] #>   F          31       171       144       154 #>   M         155       159       150        36 table(   cut3(     df,      var_name = \"age\",      breaks = 4,      .inf = F,      groups = \"sex\"   ) ) #>    age #> sex (20,30] (30,40] (40,50] (50,60] (60,70] #>   F       0     137     122     123     118 #>   M     134     106     141     119       0"},{"path":"/articles/cut3.html","id":"weights","dir":"Articles","previous_headings":"","what":"Weights","title":"Cut Cut Cut","text":"TODO","code":""},{"path":"/articles/cut3.html","id":"labels","dir":"Articles","previous_headings":"","what":"Labels","title":"Cut Cut Cut","text":"may noticed previous examples, labels data resulting variable constructed using corresponding interval notation. However, behavior can modified providing labels = F argument. case, simple auto-incrementing number used name intervals. Furthermore, can provide vector specifying labels want use constructing variable. Labels assigned order specified. Additionally, number labels must exactly equal number resulting bins. can useful wish customize labels make descriptive easier understand. instance, use labels describe characteristics individuals group, use labels consistent terminology used field study. can make results clearer easier interpret, people may working data.","code":"table(   cut3(     df,      var_name = \"age\",      breaks = 4,      labels = F   ) ) #>    age #> sex   1   2   3   4 #>   F  31 171 144 154 #>   M 155 159 150  36 table(   cut3(     df,      var_name = \"age\",      breaks = 4,      labels = c(       \"1 - 25 years\",        \"21 - 50 years\",        \"51 - 75 years\",        \"76 - 100 years\"     )   ) ) #>    age #> sex 1 - 25 years 21 - 50 years 51 - 75 years 76 - 100 years #>   F           31           171           144            154 #>   M          155           159           150             36"},{"path":"/articles/cut3.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Cut Cut Cut","text":"cut3 function Dmisc package R offers advantages disadvantages. Compared functions like cut, cut3 can offer greater flexibility efficiency working directly data.frames rather just numeric vectors. can particularly helpful need manipulate analyze multiple columns . However, also presents drawbacks, overwriting original variable within data.frame, can less intuitive needing assign result new variable. terms performance, choice cut cut3 largely depend context specific needs analysis. Lastly, always recommended understand differences peculiarities different tools available making decision method use convert numeric variables categorical ones.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel E. de la Rosa. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"de la Rosa D (2023). Dmisc: Daniel miscellaneous functions. https://drdsdaniel.github.io/Dmisc/, https://github.com/drdsdaniel/Dmisc.","code":"@Manual{,   title = {Dmisc: Daniel miscellaneous functions},   author = {Daniel E. {de la Rosa}},   year = {2023},   note = {https://drdsdaniel.github.io/Dmisc/, https://github.com/drdsdaniel/Dmisc}, }"},{"path":"/index.html","id":"dmisc-daniel-miscellaneous-functions-","dir":"","previous_headings":"","what":"Daniel miscellaneous functions","title":"Daniel miscellaneous functions","text":"Dmisc package provides collection versatile R functions developed Daniel E. de la Rosa. general-purpose tools, tied specific domain, aiming aid wide range tasks data analysis visualization.","code":""},{"path":"/index.html","id":"code-reusability","dir":"","previous_headings":"","what":"Code Reusability","title":"Daniel miscellaneous functions","text":"primary motivation behind development Dmisc facilitate code reusability. Daniel created functions avoid code repetition projects. However, equivalent function found another package good support, corresponding function Dmisc may become deprecated.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Daniel miscellaneous functions","text":"yet CRAN can install development version GitHub :","code":"tryCatch(   library(remotes),   error = function(e){     install.packages('remotes')   } ) remotes::install_github(\"drdsdaniel/Dmisc\")"},{"path":"/index.html","id":"roadmap","dir":"","previous_headings":"","what":"Roadmap","title":"Daniel miscellaneous functions","text":"Add weight support cut3 function.","code":""},{"path":"/index.html","id":"functions","dir":"","previous_headings":"","what":"Functions","title":"Daniel miscellaneous functions","text":"Browse package site: Dmisc","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Daniel miscellaneous functions","text":"feedback want contribute? Please take look contributing guidelines filing issue pull request. Please note Dmisc project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/cut3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert numeric to factor weighted and by group\n — cut3","title":"Convert numeric to factor weighted and by group\n — cut3","text":"Convert numeric factor weighted group","code":""},{"path":"/reference/cut3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert numeric to factor weighted and by group\n — cut3","text":"","code":"cut3(tbl, var_name, breaks, groups = NULL, bf_args = list(), .inf = FALSE, ...)"},{"path":"/reference/cut3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert numeric to factor weighted and by group\n — cut3","text":"tbl data.frame: Database connection data.frame var_name character: variable name breaks numeric: break points. See base::cut groups character: name groups variable bf_args list: arguments passed break function .inf logical: indicates breaks need extended -Inf Inf ... argument passed base::cut","code":""},{"path":"/reference/cut3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert numeric to factor weighted and by group\n — cut3","text":"tbl input var_name converted factor","code":""},{"path":[]},{"path":"/reference/cut3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert numeric to factor weighted and by group\n — cut3","text":"","code":"if (FALSE) { datos <- data.frame(edad = seq(1:100)) dplyr::count(cut3(datos, \"edad\", 5), edad) }"},{"path":"/reference/cut3_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut3 by quantile\n — cut3_quantile","title":"Cut3 by quantile\n — cut3_quantile","text":"Cut3 quantile","code":""},{"path":"/reference/cut3_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut3 by quantile\n — cut3_quantile","text":"","code":"cut3_quantile(tbl, var_name, .labels = NULL, .groups = NULL, .inf = TRUE, ...)"},{"path":"/reference/cut3_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut3 by quantile\n — cut3_quantile","text":"tbl data.frame: Database connection data.frame var_name character: variable name .labels list: labels breaks .groups character: name groups variable .inf logical: indicates breaks need extended -Inf Inf ... argument passed quantile","code":""},{"path":"/reference/cut3_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut3 by quantile\n — cut3_quantile","text":"tbl input var_name converted factor quantiles","code":""},{"path":"/reference/cut3_quantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut3 by quantile\n — cut3_quantile","text":"","code":"if (FALSE) { datos <- data.frame(edad = seq(1:100)) cut3_quantile(datos, \"edad\") }"},{"path":"/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a summary table for a data frame\n — describe","title":"Create a summary table for a data frame\n — describe","text":"function generates summary table data frame, containing summary statistics variable data frame.","code":""},{"path":"/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a summary table for a data frame\n — describe","text":"","code":"describe(data, digits = 4, t = TRUE, flextable = FALSE, ft_args = list(), ...)"},{"path":"/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a summary table for a data frame\n — describe","text":"data data frame containing data summarized digits number 0digits display summary table (default 4) t TRUE, table transposed (default TRUE) flextable TRUE, table converted simple flextable (default FALSE) ft_args list additional arguments pass flextable function flextable = TRUE (default empty list) ... arguments pass summary function","code":""},{"path":"/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a summary table for a data frame\n — describe","text":"table containing summary statistics variable data frame","code":""},{"path":"/reference/describe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a summary table for a data frame\n — describe","text":"","code":"if (FALSE) { describe(cars, flextable = TRUE) describe(cars, flextable = TRUE, ft_args = list(cwidth = 1)) }"},{"path":"/reference/dyn-dots.html","id":null,"dir":"Reference","previous_headings":"","what":":= assigment — :=","title":":= assigment — :=","text":":= assigment","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/tpipe.html","id":null,"dir":"Reference","previous_headings":"","what":"The T-pipe operator is similar to the pipe operator, but it returns the value\nof the left-hand side expression instead of the result of the right-hand side\nfunction. It is useful for side effects, such as printing or plotting.\nSee %T>% for details. — %T>%","title":"The T-pipe operator is similar to the pipe operator, but it returns the value\nof the left-hand side expression instead of the result of the right-hand side\nfunction. It is useful for side effects, such as printing or plotting.\nSee %T>% for details. — %T>%","text":"T-pipe operator similar pipe operator, returns value left-hand side expression instead result right-hand side function. useful side effects, printing plotting. See %T>% details.","code":""},{"path":"/reference/tpipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The T-pipe operator is similar to the pipe operator, but it returns the value\nof the left-hand side expression instead of the result of the right-hand side\nfunction. It is useful for side effects, such as printing or plotting.\nSee %T>% for details. — %T>%","text":"","code":"lhs %T>% rhs"},{"path":"/reference/tpipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The T-pipe operator is similar to the pipe operator, but it returns the value\nof the left-hand side expression instead of the result of the right-hand side\nfunction. It is useful for side effects, such as printing or plotting.\nSee %T>% for details. — %T>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/tpipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The T-pipe operator is similar to the pipe operator, but it returns the value\nof the left-hand side expression instead of the result of the right-hand side\nfunction. It is useful for side effects, such as printing or plotting.\nSee %T>% for details. — %T>%","text":"value lhs.","code":""},{"path":"/reference/vars_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple variables to unique date variable\n — vars_to_date","title":"Multiple variables to unique date variable\n — vars_to_date","text":"Multiple variables unique date variable","code":""},{"path":"/reference/vars_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple variables to unique date variable\n — vars_to_date","text":"","code":"vars_to_date(   tbl,   year = NULL,   quarter = NULL,   month = NULL,   day = NULL,   date = NULL,   drop_vars = TRUE,   clean_names = FALSE,   date_format = \"%d-%m-%y\",   origin = \"1900-01-01\",   .round = c(\"end\", \"middle\", \"start\") )"},{"path":"/reference/vars_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple variables to unique date variable\n — vars_to_date","text":"tbl data.frame tbl connection year year variable position name quarter quarter variable position name month month variable position name day day variable position name date variable name position containing like date format drop_vars indicates variables dropped clean_names indicates variable names cleaned date_format actual date format variable date argument origin base date variable convertion date .round indicates date rounded end, middle start period","code":""},{"path":"/reference/vars_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple variables to unique date variable\n — vars_to_date","text":"tbl new data.frame compute variable","code":""},{"path":"/reference/vars_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple variables to unique date variable\n — vars_to_date","text":"","code":"if (FALSE) { tbl <- data.frame(   year = rep(\"2021\", 12),   month = month.name,   day = sample(1:3, 12, TRUE),   value = sample(100:1000, 12, TRUE) )  tbl  vars_to_date(tbl, year = 1, month = 2, day = 3) }"}]
